/* This file is automatically generated with "make proto". DO NOT EDIT */
/*
 * Modified for OS/2 by harald.kipp@egnite.de.
 * All these additional modifications are public domain.
 *
 * $Log: proto.h,v $
 * Revision 1.2  2000/04/25 19:52:10  harald
 * First OS/2 release
 *
 */


/*The following definitions come from  cgi.c  */

char *unquote(char *buf);
void cgi_load_variables(FILE *f1, char *prefix);
char *cgi_variable(char *name);
char *cgi_vnum(int i, char **name);
int cgi_boolean(char *name, int def);
char *quotedup(char *s);
char *urlquote(char *s);
char *quotequotes(char *s);
void quote_spaces(char *buf);
void cgi_start_gzip(void);

/*The following definitions come from  jitterbug.c  */

void print_title(char *fmt, ...);
void fatal(char *why, ...);
void load_globals(void);
void hidden_globals(void);
void add_audit(char *name,char *msg, ...);
void display_dir(void);
void login_page(void);
void main_page(void);
int main(int argc, char *argv[]);

/*The following definitions come from  list.c  */

char **load_dir_list(char *name, int (*fn)(char *));
char **load_file_list(char *name,int (*fn)(char *));
void free_list(char **list);
int write_list(char *fname,char *mode,char **list,int (*fn)(char *name));
void debug_print_list(char **list);
int delete_list_item(char **list,char *item);
char **new_list(void);
int add_list_item(char **list,char *item);

/*The following definitions come from  loadparm.c  */

void load_config(char *name);
char *lp_mailer(void);
char *lp_incoming(void);
char *lp_from_address(void);
char *lp_smtp_address(void);
char *lp_title(void);
char *lp_base_directory(void);
char *lp_chroot_directory(void);
char *lp_auth_user(void);
int lp_guest_gid(void);
int lp_guest_uid(void);
int lp_gid(void);
int lp_uid(void);
int lp_display_binary(void);
int lp_guest_download(void);
int lp_gzip_download(void);
char *lp_background(void);
int lp_group_authentication(void);
char *lp_search_program(void);
char *lp_forward_all(void);
char *lp_forward_public(void);
char *lp_gzip_path(void);
char *lp_reply_strings(void);
char *lp_pr_identifier(void);
char *lp_autopatch(void);
char *lp_decoder(void);
char *lp_base_url(void);

/*The following definitions come from  lock.c  */

void lock_system(void);
void unlock_system(void);

/*The following definitions come from  new_message.c  */

void fatal(char *why, ...);
int process_mail(char *def_dir);
int main(int argc, char *argv[]);

/*The following definitions come from  notify.c  */

char *dir_notification(char *directory);
char *msg_notification(char *id);
void notify_dir(char *directory,char *id, char *fmt, ...);
void notify_msg(char *id,char *fmt, ...);

/*The following definitions come from  search.c  */

int exp_match(char *buf,char *exp);
int exp_match(char *buf,char *exp);
int external_search(char *name, char *sexp);

/*The following definitions come from  smtp.c  */

char *smtp_error(void);
int smtp_write(int fd, char *fmt, ...);
void smtp_write_data(int fd, char *p);
int smtp_start_mail(char *from, char *to, char *cc, char *bcc, char *subject, int len);
int smtp_end_mail(int fd);

/*The following definitions come from  snprintf.c  */


/*The following definitions come from  util.c  */

void strlower(char *str);
int is_directory(char *dir);
int file_exists(char *fname, struct stat *st);
char *find_file(char *dir, char *name);
char *wrap(char *s, int ncols);
char *extract_address(char *s);
int namecmp(const void *n1p, const void *n2p);
char *getmailheader(char *raw,char *head, int quote);
char *timestring(void);
char *load_file(char *fname, struct stat *st, int max_size);
void save_file(char *fname, char *s);
void select_list(char **list, char *vname, char *def);
int valid_user(char *username);
int in_list(char **list, char *s);
char *root_directory(void);
char *user_address(char *user);
int count_followups(char *name, time_t *last);
int count_replies(char *name, time_t *last);
int valid_id(char *id);
int get_info(char *name, struct message_info *info, int max_size);
char *load_ext(char *id, char *ext);
void trim_string(char *s,char *front,char *back);
void check_overflow(int len, int space);
char *d_name(struct dirent *di);
int match_string(char *s, char *list);
char *nth_line(char *s, int n);
char *getenv_null(char *ename);

/*The following definitions come from  vslprintf.c  */

int vslprintf(char *str, int n, char *format, va_list ap);
int slprintf(char *str, int n, char *format, ...);
